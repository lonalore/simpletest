<?php

/**
 * @file
 * Contains getLibraryUnitTest.
 */


/**
 * Tests basic Libraries API functions.
 */
class getLibraryUnitTest extends e107UnitTestCase
{

	/**
	 * Provides metadata about this test.
	 *
	 * @return array
	 *   An array of test metadata with the following keys:
	 *   - name: The name of the test.
	 *   - description: The description of the test.
	 *   - group: The group of the test.
	 */
	public static function getInfo()
	{
		return array(
			'name'        => 'Library API unit tests',
			'description' => 'Tests basic functions provided by Library API.',
			'group'       => 'Library API',
		);
	}

	/**
	 * Tests e107::library('detect', '...').
	 */
	public function testLibraryDetect()
	{
		// Test with missing library.
		$library = e107::library('detect', 'example_missing');
		$this->verbose('<pre>' . var_export($library, true) . '</pre>');
		$this->assertEqual($library, false, "e107::library('detect', '...') returns false for a missing library.");

		// Test with core library.
		$library = e107::library('detect', 'bootstrap');
		$this->verbose('<pre>' . var_export($library, true) . '</pre>');
		$this->assertEqual($library, true, "e107::library('detect', '...') returns true for a core library.");
	}

	/**
	 * Tests e107::library('load', '...').
	 */
	public function testLibraryLoad()
	{
		// Test with missing library.
		$library = e107::library('load', 'example_missing');
		$this->verbose('<pre>' . var_export($library, true) . '</pre>');
		$this->assertEqual($library, false, "e107::library('load', '...') returns false for a missing library.");

		// Test with core library.
		$library = e107::library('load', 'bootstrap');
		$this->verbose('<pre>' . var_export($library, true) . '</pre>');
		$this->assertEqual($library, true, "e107::library('load', '...') returns true for a core library.");
	}

}
